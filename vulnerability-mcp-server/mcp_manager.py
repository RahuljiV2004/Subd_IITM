#!/usr/bin/env python3
"""
Consolidated MCP Server Startup and Management
Works with the main deployment system
"""

import os
import sys
import subprocess
from pathlib import Path
import argparse


def main():
    parser = argparse.ArgumentParser(description="MCP Server Management")
    parser.add_argument(
        "action", choices=["setup", "start", "test", "docker"], help="Action to perform"
    )
    parser.add_argument("--port", default=8080, type=int, help="Port for MCP server")
    parser.add_argument("--log-level", default="INFO", help="Log level")

    args = parser.parse_args()

    # Get paths
    project_root = Path(__file__).parent.parent
    mcp_dir = Path(__file__).parent

    if args.action == "setup":
        print("üöÄ Setting up MCP server with Claude Desktop...")
        try:
            subprocess.run([sys.executable, "setup_claude.py"], cwd=mcp_dir, check=True)
            print("‚úÖ Setup completed!")
        except subprocess.CalledProcessError:
            print("‚ùå Setup failed")
            sys.exit(1)

    elif args.action == "start":
        print(f"üîÑ Starting MCP server on port {args.port}...")
        os.environ["LOG_LEVEL"] = args.log_level
        os.environ["MCP_PORT"] = str(args.port)

        try:
            subprocess.run(
                [sys.executable, "-m", "src.server"], cwd=mcp_dir, check=True
            )
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è  MCP server stopped")
        except subprocess.CalledProcessError:
            print("‚ùå Failed to start MCP server")
            sys.exit(1)

    elif args.action == "test":
        print("üß™ Testing MCP server...")
        try:
            subprocess.run([sys.executable, "test_mcp.py"], cwd=mcp_dir, check=True)
        except subprocess.CalledProcessError:
            print("‚ùå Tests failed")
            sys.exit(1)

    elif args.action == "docker":
        print("üê≥ Starting MCP server with Docker...")
        os.chdir(project_root)

        try:
            # Use the consolidated deployment system
            subprocess.run(["powershell", "-File", "deploy.ps1", "mcp"], check=True)
        except subprocess.CalledProcessError:
            print("‚ùå Docker deployment failed")
            sys.exit(1)


if __name__ == "__main__":
    main()
